server.name=http://localhost:8080
server.prefix=${server.name}/cas

cas.securityContext.serviceProperties.service=${server.prefix}/services/j_acegi_cas_security_check
# Names of roles allowed to access the CAS service manager
cas.securityContext.serviceProperties.adminRoles=ROLE_ADMIN
cas.securityContext.casProcessingFilterEntryPoint.loginUrl=${server.prefix}/login
cas.securityContext.ticketValidator.casServerUrlPrefix=${server.prefix}
# IP address or CIDR subnet allowed to access the /status URI of CAS that exposes health check information
cas.securityContext.status.allowedSubnet=127.0.0.1


cas.themeResolver.defaultThemeName=cas-theme-default
cas.viewResolver.basename=default_views

host.name=cas

#database.hibernate.dialect=org.hibernate.dialect.OracleDialect
#database.hibernate.dialect=org.hibernate.dialect.MySQLDialect
database.hibernate.dialect=org.hibernate.dialect.HSQLDialect

# == LDAP Authentication settings ==

ldap.authentication.filter=sAMAccountName=%u

#Comma-separated list of server urls.
ldap.authentication.server.urls=ldap://10.10.10.195

ldap.authentication.basedn=cn=users,dc=unicon,dc=local

#Manager credentials to bind
ldap.authentication.manager.userdn=cn=Administrator,cn=users,dc=unicon,dc=local
ldap.authentication.manager.password=uni.dev123

#Ignore the exception if LDAP query returned more than one item
ldap.authentication.ignorePartialResultException=true

ldap.authentication.jndi.connect.timeout=3000
ldap.authentication.jndi.read.timeout=3000
ldap.authentication.jndi.security.level=simple

# == LDAP Context Pooling settings ==

ldap.authentication.pool.minIdle=3
ldap.authentication.pool.maxIdle=5
ldap.authentication.pool.maxSize=10

# Maximum time in ms to wait for connection to become available
# under pool exhausted condition.
ldap.authentication.pool.maxWait=10000

# == Evictor configuration ==

# Period in ms at which evictor process runs.
ldap.authentication.pool.evictionPeriod=600000

# Maximum time in ms at which connections can remain idle before
# they become liable to eviction.
ldap.authentication.pool.idleTime=1200000

# == Connection testing settings ==

# Set to true to enable connection liveliness testing on evictor
# process runs.  Probably results in best performance.
ldap.authentication.pool.testWhileIdle=true

# Set to true to enable connection liveliness testing before every
# request to borrow an object from the pool.
ldap.authentication.pool.testOnBorrow=false

# == LDAP Password Policy Enforcement (LPPE) settings ==

#Warn all users of expiration date regardless of warningDays value
ldap.authentication.lppe.warnAll=false

#Date format for value from dateAttribute see http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html
#ldap.authentication.lppe.dateFormat=yyyyMMddHHmmss'Z'

#Change value to 'ActiveDirectory' or 'AD' when using AD
ldap.authentication.lppe.dateFormat=AD

#Calculate expiration time based on the last password change time
#Change value to 'expire' to use expiration time/date from LDAP server
ldap.authentication.lppe.warningCheckType=change

#LDAP attribute that stores the last password change time
#ldap.authentication.lppe.dateAttribute=passwordchangedtime

#Change value to 'pwdlastset' when using AD
ldap.authentication.lppe.dateAttribute=pwdlastset

#LDAP attribute that stores the user's personal setting for the number of days to warn before expiration
ldap.authentication.lppe.warningDaysAttribute=passwordwarningdays

#LDAP attribute that stores the custom setting for the number of days a password is valid
#ldap.authentication.lppe.validDaysAttribute=passwordexpiredays

#Change value to 'maxPwdAge' when using AD
ldap.authentication.lppe.validDaysAttribute=maxPwdAge

#Used if warningDaysAttribute or validDaysAttribute are not found
ldap.authentication.lppe.warningDays=30

ldap.authentication.lppe.validDays=180
